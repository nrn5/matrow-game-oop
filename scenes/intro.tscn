[gd_scene load_steps=19 format=3 uid="uid://yv6tx3d7fj3b"]

[ext_resource type="PackedScene" uid="uid://dqr54dd08lhks" path="res://scenes/joe.tscn" id="1_f85ub"]
[ext_resource type="PackedScene" uid="uid://tgjdsvt30gt7" path="res://blender/deadTree01.dae" id="2_6yxbl"]
[ext_resource type="Texture2D" uid="uid://ddl4hn6lw2fra" path="res://textures/burned_ground_01/burned_ground_01_diff_4k.jpg" id="2_w5qgk"]
[ext_resource type="Texture2D" uid="uid://dh7jpxsfpyd3x" path="res://textures/burned_ground_01/burned_ground_01_nor_gl_4k.jpg" id="3_d53cl"]
[ext_resource type="Texture2D" uid="uid://dfx0pxkjs6pr4" path="res://textures/burned_ground_01/burned_ground_01_rough_4k.jpg" id="4_fij52"]
[ext_resource type="PackedScene" uid="uid://dgphceem3w1tt" path="res://blender/main_char_anim.glb" id="5_nh0yb"]
[ext_resource type="PackedScene" uid="uid://cn23mltvrmuvq" path="res://blender/jsstar.glb" id="7_s3hso"]

[sub_resource type="Shader" id="Shader_jrvam"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pe8x2"]
shader = SubResource("Shader_jrvam")
shader_parameter/sky_top_color = Color(0.109804, 0.0745098, 0.0352941, 1)
shader_parameter/sky_horizon_color = Color(0.152941, 0.109804, 0.0705882, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(0.0666667, 0.12549, 0.0588235, 1)
shader_parameter/ground_bottom_color = Color(0.141176, 0.0784314, 0, 1)
shader_parameter/ground_horizon_color = Color(0.152941, 0.109804, 0.0705882, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15

[sub_resource type="Sky" id="Sky_k0e3x"]
sky_material = SubResource("ShaderMaterial_pe8x2")

[sub_resource type="Environment" id="Environment_ioybd"]
background_mode = 2
sky = SubResource("Sky_k0e3x")
ambient_light_source = 3
reflected_light_source = 2
volumetric_fog_enabled = true
volumetric_fog_density = 0.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_tc2ad"]
albedo_texture = ExtResource("2_w5qgk")
roughness_texture = ExtResource("4_fij52")
normal_enabled = true
normal_scale = -4.9
normal_texture = ExtResource("3_d53cl")
uv1_scale = Vector3(30, 30, 30)

[sub_resource type="BoxMesh" id="BoxMesh_4f0or"]
material = SubResource("StandardMaterial3D_tc2ad")
size = Vector3(50, 0.5, 50)

[sub_resource type="BoxShape3D" id="BoxShape3D_6dlv3"]
size = Vector3(50, 0.5, 50)

[sub_resource type="FogMaterial" id="FogMaterial_xas3i"]
albedo = Color(0.243137, 0.0941176, 0.0431373, 1)
emission = Color(0.152941, 0.0509804, 0.0117647, 1)

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_3hi4i"]
emission_shape_scale = Vector3(1.5, 1.5, 1.5)
emission_shape = 1
emission_sphere_radius = 2.0
velocity_pivot = Vector3(2, 2, 2)
direction = Vector3(2, 4, 2)
initial_velocity_max = 2.0
gravity = Vector3(0, 0, 0)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_g2oy8"]
albedo_color = Color(1, 1, 0, 1)
emission_enabled = true
emission = Color(0.847059, 0.847059, 0.196078, 1)
emission_energy_multiplier = 2.0
backlight = Color(1, 0.662745, 0, 1)
proximity_fade_enabled = true

[sub_resource type="SphereMesh" id="SphereMesh_h03tx"]
material = SubResource("StandardMaterial3D_g2oy8")
radius = 0.05
height = 0.1

[node name="introScene" type="Node3D"]

[node name="sky" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_ioybd")

[node name="world" type="Node3D" parent="."]
transform = Transform3D(3, 0, 0, 0, 1.628, 0, 0, 0, 2.48164, 0, 0, 0)

[node name="trees" type="Node3D" parent="world"]
transform = Transform3D(0.333333, 0, 0, 0, 0.614251, 0, 0, 0, 0.402959, 0, 0, 0)

[node name="deadTree01" parent="world/trees" instance=ExtResource("2_6yxbl")]
transform = Transform3D(9.66103, 0, 0, 0, 8.93492, 0, 0, 0, 6.23628, -8.64632, 0.250004, -10.5547)

[node name="deadTree02" parent="world/trees" instance=ExtResource("2_6yxbl")]
transform = Transform3D(9.66103, 0, 0, 0, 8.93492, 0, 0, 0, 6.23628, 34.9884, 0.250004, -32.5267)

[node name="deadTree03" parent="world/trees" instance=ExtResource("2_6yxbl")]
transform = Transform3D(9.66103, 0, 0, 0, 8.93492, 0, 0, 0, 6.23628, -8.64632, 0.250004, -37.407)

[node name="deadTree04" parent="world/trees" instance=ExtResource("2_6yxbl")]
transform = Transform3D(9.66103, 0, 0, 0, 8.93492, 0, 0, 0, 6.23628, -27.3084, 0.250004, -22.8482)

[node name="deadTree05" parent="world/trees" instance=ExtResource("2_6yxbl")]
transform = Transform3D(9.66103, 0, 0, 0, 8.93492, 0, 0, 0, 6.23628, -8.6683, 0.250004, 23.1962)

[node name="floor" type="StaticBody3D" parent="world"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
metadata/_edit_group_ = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="world/floor"]
mesh = SubResource("BoxMesh_4f0or")

[node name="CollisionShape3D" type="CollisionShape3D" parent="world/floor"]
shape = SubResource("BoxShape3D_6dlv3")

[node name="fog" type="FogVolume" parent="."]
transform = Transform3D(1, 0, 0, 0, 7.50682, 0, 0, 0, 1, 5, 2, 1.185)
visible = false
size = Vector3(100, 1, 100)
material = SubResource("FogMaterial_xas3i")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 18.4159, 0)

[node name="mainchar" parent="." instance=ExtResource("5_nh0yb")]
transform = Transform3D(3.5, 0, 0, 0, 3.5, 0, 0, 0, 3.5, 0, 0, 0)

[node name="Skeleton3D" parent="mainchar/Armature" index="0"]
bones/0/position = Vector3(0.0277103, -0.0881001, -1.22306)
bones/0/rotation = Quaternion(-0.633438, -0.0300467, -0.0102248, 0.773142)
bones/1/rotation = Quaternion(0.115969, 0.0147071, 0.0455292, 0.9921)
bones/2/rotation = Quaternion(0.0177045, -0.000237426, 0.00445006, 0.999833)
bones/3/rotation = Quaternion(0.0435071, -0.000437065, 0.00163374, 0.999052)
bones/4/rotation = Quaternion(-0.06177, -0.00312575, -0.00223644, 0.998083)
bones/5/rotation = Quaternion(-0.140482, 0.00314505, -0.0281138, 0.989679)
bones/7/rotation = Quaternion(0.60678, 0.389839, -0.545675, 0.42671)
bones/8/rotation = Quaternion(0.411754, 0.145164, 0.0028757, 0.899654)
bones/9/rotation = Quaternion(-0.0772454, 0.00152637, 0.702875, 0.707105)
bones/10/rotation = Quaternion(-0.086012, -0.0579468, 0.0244285, 0.994307)
bones/11/rotation = Quaternion(0.274028, -0.0323536, 0.229069, 0.933482)
bones/12/rotation = Quaternion(-0.111109, 0.135267, -0.309548, 0.934632)
bones/13/rotation = Quaternion(-0.0754889, 0.162727, 0.404646, 0.896707)
bones/15/rotation = Quaternion(0.689422, 0.0573286, -0.126542, 0.710914)
bones/16/rotation = Quaternion(0.586359, 0.00232757, -0.0436007, 0.808874)
bones/17/rotation = Quaternion(0.680155, -0.00840888, -0.0633607, 0.730277)
bones/19/rotation = Quaternion(0.604956, -0.391946, 0.548191, 0.424138)
bones/20/rotation = Quaternion(0.251622, 0.00311468, -0.281031, 0.92612)
bones/21/rotation = Quaternion(-0.0769871, -0.00155286, -0.704591, 0.705423)
bones/22/rotation = Quaternion(-0.0889306, 0.0139902, -0.101663, 0.990737)
bones/23/rotation = Quaternion(0.208619, -0.0650267, -0.229227, 0.948528)
bones/24/rotation = Quaternion(-0.117822, -0.0501686, 0.192466, 0.972912)
bones/25/rotation = Quaternion(-0.159288, -0.0481023, -0.228687, 0.959175)
bones/27/rotation = Quaternion(0.580079, 0.0319985, 0.0194718, 0.813699)
bones/28/rotation = Quaternion(0.607374, 0.000994268, 0.0503149, 0.792821)
bones/29/rotation = Quaternion(0.468248, 0.00115967, 0.0495399, 0.882206)
bones/31/rotation = Quaternion(0.0806464, 0.162494, 0.982765, -0.035578)
bones/32/rotation = Quaternion(-0.930733, -0.0169259, 0.0392962, 0.363188)
bones/33/rotation = Quaternion(0.774646, -0.481531, 0.151279, 0.381006)
bones/34/rotation = Quaternion(0.0433272, -0.00690402, -0.126453, 0.991002)
bones/36/rotation = Quaternion(-0.0720457, 0.279495, 0.956675, -0.0382713)
bones/37/rotation = Quaternion(-0.465974, -0.00740211, 0.0595566, 0.88276)
bones/38/rotation = Quaternion(0.794749, 0.36355, -0.247959, 0.417997)
bones/39/rotation = Quaternion(0.0365491, -0.00577252, 0.0894274, 0.995306)

[node name="mcLight" type="OmniLight3D" parent="mainchar"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.08035, 0.261752)
light_color = Color(1, 1, 0, 1)
light_energy = 0.0

[node name="joe" parent="." instance=ExtResource("1_f85ub")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 30, 10.3805, 24.3244)

[node name="jsstar" parent="." instance=ExtResource("7_s3hso")]
transform = Transform3D(1, 0, 0, 0, 0.760961, -0.648798, 0, 0.648798, 0.760961, 30, 1.38417, 24)

[node name="GPUParticles3D" type="GPUParticles3D" parent="jsstar"]
transform = Transform3D(1, 0, 0, 0, 0.760961, 0.648798, 0, -0.648798, 0.760961, 0, 0, 0)
amount = 20
process_material = SubResource("ParticleProcessMaterial_3hi4i")
draw_pass_1 = SubResource("SphereMesh_h03tx")

[node name="OmniLight3D2" type="OmniLight3D" parent="jsstar"]
light_color = Color(1, 1, 0, 1)
light_energy = 10.0
light_volumetric_fog_energy = 1.5
distance_fade_enabled = true

[node name="cutscene" type="AnimationPlayer" parent="."]

[editable path="mainchar"]
