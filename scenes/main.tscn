[gd_scene load_steps=23 format=3 uid="uid://b7atxuaof20fe"]

[ext_resource type="Script" path="res://scripts/level1.gd" id="1_eeoya"]
[ext_resource type="PackedScene" uid="uid://dvxedggvkby4l" path="res://scenes/block.tscn" id="1_k8bqx"]
[ext_resource type="PackedScene" uid="uid://dqr54dd08lhks" path="res://scenes/joe.tscn" id="2_76w2n"]
[ext_resource type="PackedScene" uid="uid://dde3hpdyxsg0n" path="res://scenes/dolls.tscn" id="3_aal3e"]
[ext_resource type="Texture2D" uid="uid://ddl4hn6lw2fra" path="res://textures/burned_ground_01/burned_ground_01_diff_4k.jpg" id="4_6k0y7"]
[ext_resource type="PackedScene" uid="uid://d2lr7ndyoi0x0" path="res://blender/plainWall.dae" id="4_rkueh"]
[ext_resource type="PackedScene" uid="uid://hna6y2qyem3t" path="res://blender/doorWall.dae" id="5_ktfd3"]
[ext_resource type="Texture2D" uid="uid://dh7jpxsfpyd3x" path="res://textures/burned_ground_01/burned_ground_01_nor_gl_4k.jpg" id="5_tixys"]
[ext_resource type="Texture2D" uid="uid://dfx0pxkjs6pr4" path="res://textures/burned_ground_01/burned_ground_01_rough_4k.jpg" id="6_4u2mb"]
[ext_resource type="PackedScene" uid="uid://cuhb4xa8wx2lu" path="res://scenes/nextLevel.tscn" id="6_ivd6f"]
[ext_resource type="PackedScene" uid="uid://dtfuxlkwcfsrt" path="res://scenes/bibz.tscn" id="6_o177c"]
[ext_resource type="PackedScene" uid="uid://bhasjjid0r6w3" path="res://scenes/UI/pause.tscn" id="9_t4jsp"]
[ext_resource type="PackedScene" uid="uid://efjgw673wkm7" path="res://scenes/enemy.tscn" id="10_bjgpl"]

[sub_resource type="Shader" id="Shader_qayms"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xm622"]
shader = SubResource("Shader_qayms")
shader_parameter/sky_top_color = Color(0.109804, 0.0745098, 0.0352941, 1)
shader_parameter/sky_horizon_color = Color(0.152941, 0.109804, 0.0705882, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(0.0666667, 0.12549, 0.0588235, 1)
shader_parameter/ground_bottom_color = Color(0.141176, 0.0784314, 0, 1)
shader_parameter/ground_horizon_color = Color(0.152941, 0.109804, 0.0705882, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15

[sub_resource type="Sky" id="Sky_smafh"]
sky_material = SubResource("ShaderMaterial_xm622")

[sub_resource type="Environment" id="Environment_bl2h8"]
background_mode = 2
sky = SubResource("Sky_smafh")
ambient_light_source = 3
reflected_light_source = 2
volumetric_fog_enabled = true
volumetric_fog_density = 0.0

[sub_resource type="NavigationMesh" id="NavigationMesh_8k8rt"]
vertices = PackedVector3Array(7.75, 0.83725, -27.25, 8, 0.83725, -26.5, 9.75, 0.83725, -27.25, -75.5, 0.83725, -27.75, -47.5, 0.83725, -27.75, -47.25, 0.83725, -28.25, -75.5, 0.83725, -249.5, 45.25, 0.83725, -27.5, 45.5, 0.83725, -25.25, 75.5, 0.83725, -25.25, 75.5, 0.83725, -249.5, 9.75, 0.83725, -27.25, 38.5, 0.83725, -27, 45.25, 0.83725, -27.5, 7.75, 0.83725, -27.25, 9.75, 0.83725, -27.25, 45.25, 0.83725, -27.5, -43, 0.83725, -28.25, -42.75, 0.83725, -27.25, 7.75, 0.83725, -27.25, 45.25, 0.83725, -27.5, 75.5, 0.83725, -249.5, -75.5, 0.83725, -249.5, -75.5, 0.83725, -249.5, -47.25, 0.83725, -28.25, -43, 0.83725, -28.25, -75.5, 0.83725, -7.25, -47, 0.83725, -7.25, -47.5, 0.83725, -27.75, -75.5, 0.83725, -27.75, -44.5, 9.33725, -26.25, -44.5, 9.33725, -27.25, -45.75, 9.33725, -27.25, -46, 9.33725, -26.25, -41.75, 9.33725, -26, -43.75, 9.33725, -25.75, -43.5, 9.33725, -25.25, -44.5, 9.33725, -26.25, -46, 9.33725, -26.25, -46, 9.33725, -25.25, -43.5, 9.33725, -25.25, -43.75, 9.33725, -25.75, -43.5, 9.33725, -25.25, -43.25, 9.33725, -24, -41.75, 9.33725, -23.75, -41.75, 9.33725, -26, 44, 9.33725, -26.25, 43.5, 9.33725, -26.25, 43.25, 9.33725, -25.5, 43, 9.33725, -24, 43.25, 9.33725, -22.25, 44.25, 9.33725, -22.25, 41.5, 9.33725, -25.75, 41.5, 9.33725, -24, 43, 9.33725, -24, 43.25, 9.33725, -25.5, -35, 9.33725, -26, -35, 9.33725, -23.75, -34.25, 9.33725, -23.75, -34.25, 9.33725, -26, -28.5, 9.33725, -24.25, -26.75, 9.33725, -23.75, -26.75, 9.33725, -26, -28.5, 9.33725, -25.5, -31.25, 9.33725, -25.75, -31.25, 9.33725, -24, -28.5, 9.33725, -24.25, -28.5, 9.33725, -25.5, -20, 9.33725, -26, -20, 9.33725, -23.75, -19.25, 9.33725, -23.75, -19.25, 9.33725, -26, -14, 9.33725, -24.25, -12.25, 9.33725, -23.75, -12.25, 9.33725, -26, -14, 9.33725, -25.5, -16.25, 9.33725, -25.75, -16.25, 9.33725, -24, -14, 9.33725, -24.25, -14, 9.33725, -25.5, -5.5, 9.33725, -26, -5.5, 9.33725, -23.75, -4.75, 9.33725, -23.75, -4.75, 9.33725, -26, 14.75, 9.33725, -25.5, 13.5, 9.33725, -25.75, 13.5, 9.33725, -23.75, 16.5, 9.33725, -23.75, 16.5, 9.33725, -26, 14.75, 9.33725, -25.5, 13.5, 9.33725, -23.75, 23.25, 9.33725, -26, 23.25, 9.33725, -23.75, 24, 9.33725, -23.75, 24, 9.33725, -26, 27, 9.33725, -25.75, 27, 9.33725, -24, 29, 9.33725, -24.25, 29, 9.33725, -25.5, 29, 9.33725, -24.25, 31, 9.33725, -23.75, 31, 9.33725, -26, 29, 9.33725, -25.5, 37.75, 9.33725, -26, 37.75, 9.33725, -23.75, 38.5, 9.33725, -23.75, 38.5, 9.33725, -26, -38.75, 9.33725, -25.75, -38.75, 9.33725, -24, -38, 9.33725, -24, -38, 9.33725, -25.75, -37, 8.58725, -25.75, -37, 8.58725, -24, -36, 8.58725, -24.25, -36, 8.58725, -25.5, -23.75, 9.33725, -25.75, -23.75, 9.33725, -24, -23, 9.33725, -24, -23, 9.33725, -25.75, -22, 8.58725, -25.75, -22, 8.58725, -24, -21, 8.58725, -24.25, -21, 8.58725, -25.5, -9.25, 9.33725, -25.75, -9.25, 9.33725, -24, -8.5, 9.33725, -24, -8.5, 9.33725, -25.75, -7.5, 8.58725, -25.75, -7.5, 8.58725, -24, -6.5, 8.58725, -24.25, -6.5, 8.58725, -25.5, -1.75, 9.33725, -24, 1, 9.33725, -23.75, 1, 9.33725, -25.75, -1.75, 9.33725, -25.75, 2, 8.58725, -25.75, 2, 8.58725, -24, 3.5, 8.58725, -24, 3.5, 8.58725, -25.75, 4.5, 9.33725, -25.75, 4.5, 9.33725, -24, 5.5, 9.33725, -24, 5.5, 9.33725, -25.75, 6.5, 8.58725, -25.75, 6.5, 8.58725, -23.75, 8, 8.58725, -23.75, 8, 8.58725, -25.75, 9, 9.33725, -25.75, 9, 9.33725, -23.75, 10, 9.33725, -23.75, 10, 9.33725, -25.75, 11, 8.58725, -25.75, 11, 8.58725, -24, 12.5, 8.58725, -24, 12.5, 8.58725, -25.75, 19.5, 9.33725, -25.75, 19.5, 9.33725, -24, 20.25, 9.33725, -24, 20.25, 9.33725, -25.75, 21.25, 8.58725, -25.75, 21.25, 8.58725, -24, 22.25, 8.58725, -24.25, 22.25, 8.58725, -25.5, 34, 9.33725, -25.75, 34, 9.33725, -24, 34.75, 9.33725, -24, 34.75, 9.33725, -25.75, 35.75, 8.58725, -25.75, 35.75, 8.58725, -24, 36.75, 8.58725, -24.25, 36.75, 8.58725, -25.5, -40.75, 8.58725, -25.5, -40.75, 8.58725, -24.25, -39.75, 8.58725, -24.25, -39.75, 8.58725, -25.5, -33.25, 8.58725, -25.5, -33.25, 8.58725, -24.25, -32.25, 8.58725, -24.25, -32.25, 8.58725, -25.5, -25.75, 8.58725, -25.5, -25.75, 8.58725, -24.25, -24.75, 8.58725, -24.25, -24.75, 8.58725, -25.5, -18.25, 8.58725, -25.5, -18.25, 8.58725, -24.25, -17.25, 8.58725, -24.25, -17.25, 8.58725, -25.5, -11.25, 8.58725, -25.5, -11.25, 8.58725, -24.25, -10.25, 8.58725, -24.25, -10.25, 8.58725, -25.5, -3.75, 8.58725, -25.5, -3.75, 8.58725, -24.25, -2.75, 8.58725, -24.25, -2.75, 8.58725, -25.5, 17.5, 8.58725, -25.5, 17.5, 8.58725, -24.25, 18.5, 8.58725, -24.25, 18.5, 8.58725, -25.5, 25, 8.58725, -25.5, 25, 8.58725, -24.25, 26, 8.58725, -24.25, 26, 8.58725, -25.5, 32, 8.58725, -25.5, 32, 8.58725, -24.25, 33, 8.58725, -24.25, 33, 8.58725, -25.5, 39.5, 8.58725, -25.5, 39.5, 8.58725, -24.25, 40.5, 8.58725, -24.25, 40.5, 8.58725, -25.5, 46.5, 0.83725, 17, 75.5, 0.83725, 17, 75.5, 0.83725, -25.25, 45.5, 0.83725, -25.25, -45.75, 8.58725, -24.25, -45.75, 8.58725, -23.25, -44.25, 8.58725, -23.25, -44.25, 8.58725, -24.25, 9.75, 0.83725, -22.5, 8, 0.83725, -23.25, 7.75, 0.83725, -22.5, 43, 0.83725, 21.5, 43, 0.83725, 21.5, 42, 0.83725, -22.5, 9.75, 0.83725, -22.5, -41.75, 0.83725, 21.5, 43, 0.83725, 21.5, 7.75, 0.83725, -22.5, -42.75, 0.83725, -22.5, -46.25, 9.33725, -22.25, -46.25, 9.33725, -21.5, -43.75, 9.33725, -21.5, -43.75, 9.33725, -22.25, 43.5, 8.33725, -21.25, 43.5, 8.33725, -18.5, 44.25, 8.33725, -18.5, 44.25, 8.33725, -21.25, -45.5, 8.58725, -20.5, -45.75, 8.58725, -20, -45.75, 8.58725, -19.5, -44, 8.58725, -19.5, -44.25, 8.58725, -20.5, -45.75, 9.33725, -18.5, -45.75, 9.33725, -17.75, -44, 9.33725, -17.75, -44, 9.33725, -18.5, 43.25, 9.33725, -17.5, 43.25, 9.33725, -15.25, 44.75, 9.33725, -15.5, 44.75, 9.33725, -17.25, -45.5, 8.58725, -16.75, -45.5, 8.58725, -16, -44.25, 8.58725, -16, -44.25, 8.58725, -16.75, -45.75, 9.33725, -13, -43.75, 9.33725, -13, -44, 9.33725, -15, -46, 9.33725, -14.75, 44.25, 8.33725, -14.25, 43.75, 8.33725, -14.25, 43.5, 8.33725, -13.25, 43.5, 8.33725, -11.5, 44.5, 8.33725, -11.5, -45.5, 8.58725, -12, -45.5, 8.58725, -11, -44, 8.58725, -11.25, -44, 8.58725, -12, 43.5, 9.33725, -8.25, 43.5, 9.33725, -7, 44.75, 9.33725, -7, 44.5, 9.33725, -10.5, 43.75, 9.33725, -10.5, -46, 9.33725, -10, -46, 9.33725, -9.25, -43.5, 9.33725, -9.25, -43.5, 9.33725, -10.25, -45.5, 8.58725, -7.25, -43.75, 8.58725, -7.5, -44, 8.58725, -8.25, -45.5, 8.58725, -8, -75.5, 0.83725, 23, -46.25, 0.83725, 22.75, -47, 0.83725, -7.25, -75.5, 0.83725, -7.25, -45.5, 9.33725, -6.25, -45.5, 9.33725, -5.5, -43.75, 9.33725, -5.5, -43.75, 9.33725, -6.5, 43.75, 8.33725, -6, 43.75, 8.33725, -4.75, 44.5, 8.33725, -4.75, 44.5, 8.33725, -6, -45.25, 8.58725, -4.5, -45.25, 8.58725, -4, -44, 8.58725, -4, -44, 8.58725, -4.5, 43.75, 9.33725, -0.25, 44.75, 9.33725, -0.25, 45, 9.33725, -2, 45, 9.33725, -3.5, 43.5, 9.33725, -3.75, -45.5, 9.33725, -1, -43.5, 9.33725, -1, -43.75, 9.33725, -3, -45.75, 9.33725, -2.5, -45, 8.58725, 1, -43.75, 8.58725, 1, -43.75, 8.58725, 0, -45.25, 8.58725, 0, 44, 9.33725, 2.5, 44.75, 9.33725, 2.5, 44.75, 9.33725, 1.25, 43.75, 9.33725, 1.25, -45.5, 9.33725, 2.75, -43.25, 9.33725, 2.75, -43.25, 9.33725, 2, -45.75, 9.33725, 2, 44, 8.33725, 5, 44.75, 8.33725, 5, 44.75, 8.33725, 3.5, 43.75, 8.33725, 3.5, -45, 8.58725, 3.75, -45.25, 8.58725, 4.25, -45.25, 8.58725, 4.75, -43.5, 8.58725, 4.75, -43.75, 8.58725, 3.75, -45, 9.33725, 6.5, -43.5, 9.33725, 6.5, -43.5, 9.33725, 5.75, -45.25, 9.33725, 5.75, 45, 9.33725, 6, 43.75, 9.33725, 6, 44.25, 9.33725, 8.5, 44.25, 9.33725, 8.5, 44, 9.33725, 11.25, 45, 9.33725, 11.25, 45, 9.33725, 6, -45, 8.58725, 7.5, -45, 8.58725, 8.5, -43.5, 8.58725, 8.25, -43.5, 8.58725, 7.5, -43.25, 9.33725, 11.25, -43, 9.33725, 10, -43.25, 9.33725, 9.25, -45.25, 9.33725, 9.5, -45.25, 9.33725, 11.25, -44.75, 8.58725, 13.25, -43.5, 8.58725, 13.25, -43.5, 8.58725, 12.25, -45, 8.58725, 12.25, 44.25, 8.33725, 12.25, 44.25, 8.33725, 13.75, 45, 8.33725, 13.75, 45, 8.33725, 12.25, -45.25, 9.33725, 14.25, -45.25, 9.33725, 15, -43, 9.33725, 15, -43, 9.33725, 14.25, 44, 9.33725, 14.75, 44, 9.33725, 16, 45.25, 9.33725, 16, 45.25, 9.33725, 14.75, -44.75, 8.58725, 16, -45, 8.58725, 16.5, -45, 8.58725, 17, -43, 8.58725, 17, -43.5, 8.58725, 16, 44.25, 8.33725, 17.5, 44.25, 8.33725, 18.5, 45.25, 8.33725, 18.5, 45, 8.33725, 17, 46.5, 0.83725, 25.5, 75.5, 0.83725, 25.5, 75.5, 0.83725, 17, 46.5, 0.83725, 17, -44.75, 9.33725, 18, -44.75, 9.33725, 18.75, -43.25, 9.33725, 18.75, -43.25, 9.33725, 18, 44.25, 9.33725, 19.5, 44.25, 9.33725, 20.75, 45.25, 9.33725, 20.75, 45.25, 9.33725, 19.5, -44.75, 8.58725, 19.75, -44.75, 8.58725, 20.75, -43.25, 8.58725, 20.75, -43.25, 8.58725, 19.75, -42.75, 9.33725, 21.75, -45, 9.33725, 21.75, -44.75, 9.33725, 23.25, -43.25, 9.33725, 23.25, -42.5, 9.33725, 23, -43, 9.33725, 24.75, -41.25, 9.33725, 25, -41.25, 9.33725, 22.75, -42.5, 9.33725, 23, -43.25, 9.33725, 23.25, -34.5, 9.33725, 22.5, -34.5, 9.33725, 25, -33.75, 9.33725, 25, -33.75, 9.33725, 22.5, -23.5, 9.33725, 22.5, -23.5, 9.33725, 25, -22.5, 9.33725, 25, -22.5, 9.33725, 22.5, -12, 9.33725, 22.5, -12, 9.33725, 25, -11.25, 9.33725, 25, -11.25, 9.33725, 22.5, 0.25, 9.33725, 22.5, 0.25, 9.33725, 25, 1, 9.33725, 25, 1, 9.33725, 22.5, 12.25, 9.33725, 22.5, 12.25, 9.33725, 25, 13, 9.33725, 25, 13, 9.33725, 22.5, 25, 9.33725, 22.5, 25, 9.33725, 25, 25.75, 9.33725, 25, 25.75, 9.33725, 22.5, 40, 9.33725, 22.5, 40, 9.33725, 25, 40.75, 9.33725, 25, 40.75, 9.33725, 22.5, -44, 0.83725, 26, -44.25, 0.83725, 24.75, -45.75, 0.83725, 24.75, -46.25, 0.83725, 24.25, -46.25, 0.83725, 22.75, -75.5, 0.83725, 23, 75.5, 0.83725, 25.5, 46.5, 0.83725, 25.5, 46.25, 0.83725, 27.75, 75.5, 0.83725, 249.5, -45.75, 0.83725, 24.75, -46.25, 0.83725, 24.25, -75.5, 0.83725, 23, -44, 0.83725, 26, -45.75, 0.83725, 24.75, -75.5, 0.83725, 23, -75.5, 0.83725, 249.5, 43.5, 0.83725, 27.75, 43.25, 0.83725, 26, -44, 0.83725, 26, -75.5, 0.83725, 249.5, 75.5, 0.83725, 249.5, 43.5, 0.83725, 27.75, -44, 0.83725, 26, 75.5, 0.83725, 249.5, 46.25, 0.83725, 27.75, 43.5, 0.83725, 27.75, -36.5, 8.58725, 24.75, -35.5, 8.58725, 24.5, -35.5, 8.58725, 23.25, -36.5, 8.58725, 22.75, -29.75, 9.33725, 24.5, -29, 9.33725, 24.5, -29, 9.33725, 23.25, -29.75, 9.33725, 23.25, -30, 9.33725, 25, -29.75, 9.33725, 24.5, -29.75, 9.33725, 23.25, -30, 9.33725, 22.75, -31.75, 9.33725, 23, -31.75, 9.33725, 24.75, -25.25, 8.58725, 24.75, -24.5, 8.58725, 24.5, -24.5, 8.58725, 23.25, -25.25, 8.58725, 22.75, -18.5, 9.33725, 24.5, -17.75, 9.33725, 24.5, -17.75, 9.33725, 23.25, -18.5, 9.33725, 23.25, -18.75, 9.33725, 25, -18.5, 9.33725, 24.5, -18.5, 9.33725, 23.25, -18.75, 9.33725, 22.75, -20.5, 9.33725, 23, -20.5, 9.33725, 24.75, -14, 8.58725, 24.75, -13, 8.58725, 24.5, -13, 8.58725, 23.25, -14, 8.58725, 22.75, -8.25, 9.33725, 24.75, -6.5, 9.33725, 25, -6.5, 9.33725, 22.75, -8.25, 9.33725, 22.75, -1.75, 8.58725, 24.75, -0.75, 8.58725, 24.5, -0.75, 8.58725, 23.25, -1.75, 8.58725, 22.75, 4, 9.33725, 24.75, 5.75, 9.33725, 24.75, 5.75, 9.33725, 23, 4, 9.33725, 22.75, 10.25, 8.58725, 24.75, 11.25, 8.58725, 24.5, 11.25, 8.58725, 23.25, 10.25, 8.58725, 22.75, 16, 9.33725, 24.75, 18.25, 9.33725, 25, 18.25, 9.33725, 22.75, 16, 9.33725, 22.75, 23, 8.58725, 24.75, 24, 8.58725, 24.5, 24, 8.58725, 23.25, 23, 8.58725, 22.75, 29.75, 9.33725, 23.25, 29.5, 9.33725, 22.75, 28.75, 9.33725, 22.75, 29.75, 9.33725, 23.25, 28.75, 9.33725, 22.75, 28.75, 9.33725, 24.75, 31.25, 9.33725, 24.5, 31.25, 9.33725, 24.5, 33.25, 9.33725, 25, 33.25, 9.33725, 22.75, 29.75, 9.33725, 23.25, 38, 8.58725, 24.75, 39, 8.58725, 24.5, 39, 8.58725, 23.25, 38, 8.58725, 22.75, 44.5, 9.33725, 25.5, 44.5, 9.33725, 26.5, 45.25, 9.33725, 26.25, 45.5, 9.33725, 24.75, 43.75, 9.33725, 24.75, 44.5, 9.33725, 25.5, 45.5, 9.33725, 24.75, 45.5, 9.33725, 23.25, 43.75, 9.33725, 22.75, -38.25, 9.33725, 23, -38.25, 9.33725, 24.5, -37.5, 9.33725, 24.5, -37.5, 9.33725, 23, -27.25, 9.33725, 23, -27.25, 9.33725, 24.5, -26.25, 9.33725, 24.5, -26.25, 9.33725, 23, -16, 9.33725, 23, -16, 9.33725, 24.5, -15, 9.33725, 24.5, -15, 9.33725, 23, -10.25, 8.58725, 23.25, -10.25, 8.58725, 24.5, -9.25, 8.58725, 24.5, -9.25, 8.58725, 23, -3.5, 9.33725, 23, -3.5, 9.33725, 24.5, -2.75, 9.33725, 24.5, -2.75, 9.33725, 23, 2, 8.58725, 23.25, 2, 8.58725, 24.5, 3, 8.58725, 24.5, 3, 8.58725, 23, 8.5, 9.33725, 23, 8.5, 9.33725, 24.5, 9.25, 9.33725, 24.5, 9.25, 9.33725, 23, 14, 8.58725, 23.25, 14, 8.58725, 24.5, 15, 8.58725, 24.5, 15, 8.58725, 23, 21.25, 9.33725, 23, 21.25, 9.33725, 24.5, 22, 9.33725, 24.5, 22, 9.33725, 23, 26.75, 8.58725, 23.25, 26.75, 8.58725, 24.5, 27.75, 8.58725, 24.5, 27.75, 8.58725, 23, 36.25, 9.33725, 23, 36.25, 9.33725, 24.5, 37, 9.33725, 24.5, 37, 9.33725, 23, 41.75, 8.58725, 23.25, 41.75, 8.58725, 24.5, 42.75, 8.58725, 24.5, 42.75, 8.58725, 23, -40.25, 8.58725, 23.25, -40.25, 8.58725, 24.5, -39.25, 8.58725, 24.5, -39.25, 8.58725, 23.25, -5.5, 8.58725, 23.25, -5.5, 8.58725, 24.5, -4.5, 8.58725, 24.5, -4.5, 8.58725, 23.25, 6.75, 8.58725, 23.25, 6.75, 8.58725, 24.5, 7.5, 8.58725, 24.5, 7.5, 8.58725, 23.25, 19.25, 8.58725, 23.25, 19.25, 8.58725, 24.5, 20.25, 8.58725, 24.5, 20.25, 8.58725, 23.25, 34.25, 8.58725, 23.25, 34.25, 8.58725, 24.5, 35.25, 8.58725, 24.5, 35.25, 8.58725, 23.25)
polygons = [PackedInt32Array(0, 2, 1), PackedInt32Array(4, 3, 5), PackedInt32Array(5, 3, 6), PackedInt32Array(8, 7, 9), PackedInt32Array(9, 7, 10), PackedInt32Array(13, 12, 11), PackedInt32Array(16, 15, 14), PackedInt32Array(18, 17, 19), PackedInt32Array(19, 17, 20), PackedInt32Array(20, 17, 21), PackedInt32Array(21, 17, 22), PackedInt32Array(25, 24, 23), PackedInt32Array(29, 28, 26), PackedInt32Array(26, 28, 27), PackedInt32Array(31, 30, 32), PackedInt32Array(32, 30, 33), PackedInt32Array(36, 35, 34), PackedInt32Array(41, 40, 37), PackedInt32Array(37, 40, 38), PackedInt32Array(38, 40, 39), PackedInt32Array(43, 42, 44), PackedInt32Array(44, 42, 45), PackedInt32Array(47, 46, 48), PackedInt32Array(48, 46, 49), PackedInt32Array(49, 46, 50), PackedInt32Array(50, 46, 51), PackedInt32Array(54, 53, 55), PackedInt32Array(55, 53, 52), PackedInt32Array(59, 58, 56), PackedInt32Array(56, 58, 57), PackedInt32Array(63, 62, 60), PackedInt32Array(60, 62, 61), PackedInt32Array(67, 66, 64), PackedInt32Array(64, 66, 65), PackedInt32Array(71, 70, 68), PackedInt32Array(68, 70, 69), PackedInt32Array(75, 74, 72), PackedInt32Array(72, 74, 73), PackedInt32Array(79, 78, 76), PackedInt32Array(76, 78, 77), PackedInt32Array(83, 82, 80), PackedInt32Array(80, 82, 81), PackedInt32Array(86, 85, 84), PackedInt32Array(88, 87, 89), PackedInt32Array(89, 87, 90), PackedInt32Array(94, 93, 91), PackedInt32Array(91, 93, 92), PackedInt32Array(98, 97, 95), PackedInt32Array(95, 97, 96), PackedInt32Array(102, 101, 99), PackedInt32Array(99, 101, 100), PackedInt32Array(106, 105, 103), PackedInt32Array(103, 105, 104), PackedInt32Array(110, 109, 107), PackedInt32Array(107, 109, 108), PackedInt32Array(114, 113, 111), PackedInt32Array(111, 113, 112), PackedInt32Array(118, 117, 115), PackedInt32Array(115, 117, 116), PackedInt32Array(122, 121, 119), PackedInt32Array(119, 121, 120), PackedInt32Array(126, 125, 123), PackedInt32Array(123, 125, 124), PackedInt32Array(130, 129, 127), PackedInt32Array(127, 129, 128), PackedInt32Array(134, 133, 131), PackedInt32Array(131, 133, 132), PackedInt32Array(138, 137, 135), PackedInt32Array(135, 137, 136), PackedInt32Array(142, 141, 139), PackedInt32Array(139, 141, 140), PackedInt32Array(146, 145, 143), PackedInt32Array(143, 145, 144), PackedInt32Array(150, 149, 147), PackedInt32Array(147, 149, 148), PackedInt32Array(154, 153, 151), PackedInt32Array(151, 153, 152), PackedInt32Array(158, 157, 155), PackedInt32Array(155, 157, 156), PackedInt32Array(162, 161, 159), PackedInt32Array(159, 161, 160), PackedInt32Array(166, 165, 163), PackedInt32Array(163, 165, 164), PackedInt32Array(170, 169, 167), PackedInt32Array(167, 169, 168), PackedInt32Array(174, 173, 171), PackedInt32Array(171, 173, 172), PackedInt32Array(178, 177, 175), PackedInt32Array(175, 177, 176), PackedInt32Array(182, 181, 179), PackedInt32Array(179, 181, 180), PackedInt32Array(186, 185, 183), PackedInt32Array(183, 185, 184), PackedInt32Array(190, 189, 187), PackedInt32Array(187, 189, 188), PackedInt32Array(194, 193, 191), PackedInt32Array(191, 193, 192), PackedInt32Array(198, 197, 195), PackedInt32Array(195, 197, 196), PackedInt32Array(202, 201, 199), PackedInt32Array(199, 201, 200), PackedInt32Array(206, 205, 203), PackedInt32Array(203, 205, 204), PackedInt32Array(210, 209, 207), PackedInt32Array(207, 209, 208), PackedInt32Array(212, 211, 213), PackedInt32Array(213, 211, 214), PackedInt32Array(218, 217, 215), PackedInt32Array(215, 217, 216), PackedInt32Array(220, 219, 221), PackedInt32Array(221, 219, 222), PackedInt32Array(225, 224, 223), PackedInt32Array(229, 228, 226), PackedInt32Array(226, 228, 227), PackedInt32Array(233, 232, 230), PackedInt32Array(230, 232, 231), PackedInt32Array(237, 236, 234), PackedInt32Array(234, 236, 235), PackedInt32Array(239, 238, 240), PackedInt32Array(240, 238, 242), PackedInt32Array(240, 242, 241), PackedInt32Array(246, 245, 243), PackedInt32Array(243, 245, 244), PackedInt32Array(250, 249, 247), PackedInt32Array(247, 249, 248), PackedInt32Array(254, 253, 251), PackedInt32Array(251, 253, 252), PackedInt32Array(258, 257, 255), PackedInt32Array(255, 257, 256), PackedInt32Array(260, 259, 261), PackedInt32Array(261, 259, 262), PackedInt32Array(262, 259, 263), PackedInt32Array(267, 266, 264), PackedInt32Array(264, 266, 265), PackedInt32Array(269, 268, 270), PackedInt32Array(270, 268, 272), PackedInt32Array(270, 272, 271), PackedInt32Array(274, 273, 275), PackedInt32Array(275, 273, 276), PackedInt32Array(280, 279, 277), PackedInt32Array(277, 279, 278), PackedInt32Array(284, 283, 281), PackedInt32Array(281, 283, 282), PackedInt32Array(286, 285, 287), PackedInt32Array(287, 285, 288), PackedInt32Array(292, 291, 289), PackedInt32Array(289, 291, 290), PackedInt32Array(296, 295, 293), PackedInt32Array(293, 295, 294), PackedInt32Array(298, 297, 299), PackedInt32Array(299, 297, 300), PackedInt32Array(300, 297, 301), PackedInt32Array(302, 305, 303), PackedInt32Array(303, 305, 304), PackedInt32Array(307, 306, 308), PackedInt32Array(308, 306, 309), PackedInt32Array(311, 310, 312), PackedInt32Array(312, 310, 313), PackedInt32Array(315, 314, 316), PackedInt32Array(316, 314, 317), PackedInt32Array(319, 318, 320), PackedInt32Array(320, 318, 321), PackedInt32Array(323, 322, 324), PackedInt32Array(324, 322, 326), PackedInt32Array(324, 326, 325), PackedInt32Array(328, 327, 329), PackedInt32Array(329, 327, 330), PackedInt32Array(333, 332, 331), PackedInt32Array(335, 334, 336), PackedInt32Array(336, 334, 337), PackedInt32Array(341, 340, 338), PackedInt32Array(338, 340, 339), PackedInt32Array(343, 342, 344), PackedInt32Array(344, 342, 345), PackedInt32Array(345, 342, 346), PackedInt32Array(348, 347, 349), PackedInt32Array(349, 347, 350), PackedInt32Array(354, 353, 351), PackedInt32Array(351, 353, 352), PackedInt32Array(358, 357, 355), PackedInt32Array(355, 357, 356), PackedInt32Array(362, 361, 359), PackedInt32Array(359, 361, 360), PackedInt32Array(364, 363, 365), PackedInt32Array(365, 363, 367), PackedInt32Array(365, 367, 366), PackedInt32Array(369, 368, 370), PackedInt32Array(370, 368, 371), PackedInt32Array(375, 374, 372), PackedInt32Array(372, 374, 373), PackedInt32Array(379, 378, 376), PackedInt32Array(376, 378, 377), PackedInt32Array(383, 382, 380), PackedInt32Array(380, 382, 381), PackedInt32Array(387, 386, 384), PackedInt32Array(384, 386, 385), PackedInt32Array(392, 391, 388), PackedInt32Array(388, 391, 390), PackedInt32Array(388, 390, 389), PackedInt32Array(396, 395, 397), PackedInt32Array(397, 395, 393), PackedInt32Array(393, 395, 394), PackedInt32Array(401, 400, 398), PackedInt32Array(398, 400, 399), PackedInt32Array(405, 404, 402), PackedInt32Array(402, 404, 403), PackedInt32Array(409, 408, 406), PackedInt32Array(406, 408, 407), PackedInt32Array(413, 412, 410), PackedInt32Array(410, 412, 411), PackedInt32Array(417, 416, 414), PackedInt32Array(414, 416, 415), PackedInt32Array(421, 420, 418), PackedInt32Array(418, 420, 419), PackedInt32Array(425, 424, 422), PackedInt32Array(422, 424, 423), PackedInt32Array(428, 427, 426), PackedInt32Array(431, 430, 429), PackedInt32Array(433, 432, 434), PackedInt32Array(434, 432, 435), PackedInt32Array(438, 437, 436), PackedInt32Array(440, 439, 441), PackedInt32Array(441, 439, 442), PackedInt32Array(445, 444, 443), PackedInt32Array(449, 448, 446), PackedInt32Array(446, 448, 447), PackedInt32Array(452, 451, 450), PackedInt32Array(454, 453, 455), PackedInt32Array(455, 453, 456), PackedInt32Array(460, 459, 457), PackedInt32Array(457, 459, 458), PackedInt32Array(462, 461, 463), PackedInt32Array(463, 461, 464), PackedInt32Array(464, 461, 466), PackedInt32Array(464, 466, 465), PackedInt32Array(468, 467, 469), PackedInt32Array(469, 467, 470), PackedInt32Array(474, 473, 471), PackedInt32Array(471, 473, 472), PackedInt32Array(476, 475, 477), PackedInt32Array(477, 475, 478), PackedInt32Array(478, 475, 480), PackedInt32Array(478, 480, 479), PackedInt32Array(482, 481, 483), PackedInt32Array(483, 481, 484), PackedInt32Array(488, 487, 485), PackedInt32Array(485, 487, 486), PackedInt32Array(490, 489, 491), PackedInt32Array(491, 489, 492), PackedInt32Array(494, 493, 495), PackedInt32Array(495, 493, 496), PackedInt32Array(498, 497, 499), PackedInt32Array(499, 497, 500), PackedInt32Array(504, 503, 501), PackedInt32Array(501, 503, 502), PackedInt32Array(506, 505, 507), PackedInt32Array(507, 505, 508), PackedInt32Array(511, 510, 509), PackedInt32Array(513, 512, 514), PackedInt32Array(514, 512, 515), PackedInt32Array(517, 516, 518), PackedInt32Array(518, 516, 519), PackedInt32Array(521, 520, 522), PackedInt32Array(522, 520, 523), PackedInt32Array(525, 524, 526), PackedInt32Array(526, 524, 527), PackedInt32Array(529, 528, 530), PackedInt32Array(530, 528, 531), PackedInt32Array(531, 528, 532), PackedInt32Array(536, 535, 533), PackedInt32Array(533, 535, 534), PackedInt32Array(540, 539, 537), PackedInt32Array(537, 539, 538), PackedInt32Array(544, 543, 541), PackedInt32Array(541, 543, 542), PackedInt32Array(546, 545, 547), PackedInt32Array(547, 545, 548), PackedInt32Array(552, 551, 549), PackedInt32Array(549, 551, 550), PackedInt32Array(554, 553, 555), PackedInt32Array(555, 553, 556), PackedInt32Array(560, 559, 557), PackedInt32Array(557, 559, 558), PackedInt32Array(562, 561, 563), PackedInt32Array(563, 561, 564), PackedInt32Array(568, 567, 565), PackedInt32Array(565, 567, 566), PackedInt32Array(570, 569, 571), PackedInt32Array(571, 569, 572), PackedInt32Array(576, 575, 573), PackedInt32Array(573, 575, 574), PackedInt32Array(578, 577, 579), PackedInt32Array(579, 577, 580), PackedInt32Array(584, 583, 581), PackedInt32Array(581, 583, 582), PackedInt32Array(588, 587, 585), PackedInt32Array(585, 587, 586), PackedInt32Array(592, 591, 589), PackedInt32Array(589, 591, 590), PackedInt32Array(596, 595, 593), PackedInt32Array(593, 595, 594), PackedInt32Array(600, 599, 597), PackedInt32Array(597, 599, 598)]
cell_height = 0.05
agent_height = 5.0
agent_max_climb = 0.05

[sub_resource type="FogMaterial" id="FogMaterial_uxno1"]
albedo = Color(0.243137, 0.0941176, 0.0431373, 1)
emission = Color(0.152941, 0.0509804, 0.0117647, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_yqut8"]
albedo_texture = ExtResource("4_6k0y7")
roughness_texture = ExtResource("6_4u2mb")
normal_enabled = true
normal_scale = -4.9
normal_texture = ExtResource("5_tixys")
uv1_scale = Vector3(30, 30, 30)

[sub_resource type="BoxMesh" id="BoxMesh_uo6qh"]
material = SubResource("StandardMaterial3D_yqut8")
size = Vector3(50, 0.5, 50)

[sub_resource type="BoxShape3D" id="BoxShape3D_odway"]
size = Vector3(50, 0.5, 50)

[node name="level1" type="Node3D"]
process_mode = 3
script = ExtResource("1_eeoya")

[node name="sky" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_bl2h8")

[node name="NavigationRegion3D" type="NavigationRegion3D" parent="."]
navigation_mesh = SubResource("NavigationMesh_8k8rt")

[node name="world" type="Node3D" parent="NavigationRegion3D"]

[node name="FogVolume" type="FogVolume" parent="NavigationRegion3D/world"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.85996, 1.06673, 1.18452)
size = Vector3(100, 1, 100)
material = SubResource("FogMaterial_uxno1")

[node name="boundaryWalls" type="Node3D" parent="NavigationRegion3D/world"]
transform = Transform3D(-1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, -1, 0, 0, 0)

[node name="plainWall1" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 2.30307, 0, -23.813)

[node name="plainWall2" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, -9.81527, 0, -23.813)

[node name="plainWall3" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, -22.5947, 0, -23.813)

[node name="plainWall4" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 14.5669, 0, -23.813)

[node name="plainWall6" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0149392, 0, 0.666152, 0, 0.551292, 0, -0.822857, 0, -0.0283067, -44.2678, 0.120051, -0.68946)

[node name="plainWall7" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0216651, 0, 0.671593, 0, 0.551292, 0, -1.19332, 0, -0.0285379, -44.0429, 0.120051, 11.194)

[node name="plainWall8" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0149392, 0, 0.666152, 0, 0.551292, 0, -0.822857, 0, -0.0283067, -44.717, 0.120051, -18.9074)

[node name="plainWall9" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0153086, 0, 0.999728, 0, 0.565216, 0, -0.653472, 0, -0.0234202, 44.3428, 0, -5.24103)

[node name="plainWall10" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0153086, 0, 0.999728, 0, 0.565216, 0, -0.653472, 0, -0.0234202, 44.6266, 0, 6.87398)

[node name="plainWall11" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0153086, 0, 0.999728, 0, 0.565216, 0, -0.653472, 0, -0.0234202, 44.9124, 0, 19.0723)

[node name="plainWall12" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(-0.0153086, 0, 0.999728, 0, 0.565216, 0, -0.653472, 0, -0.0234202, 44.0556, 0, -17.5015)

[node name="plainWall14" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, -20.8187, 0, 24.8723)

[node name="plainWall15" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, -35.2173, 0, 24.8723)

[node name="plainWall16" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 7.96618, 0, 24.8723)

[node name="plainWall5" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, -37.4666, 0, -23.813)

[node name="plainWall28" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 25.8498, 0, -23.813)

[node name="plainWall31" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 37.0359, 0, -23.813)

[node name="plainWall34" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 22.4842, 0, 24.8723)

[node name="plainWall35" parent="NavigationRegion3D/world/boundaryWalls" instance=ExtResource("4_rkueh")]
transform = Transform3D(0.653651, 0, 0, 0, 0.565216, 0, 0, 0, 1, 37.4098, 0, 24.8723)

[node name="blocks" type="Node3D" parent="NavigationRegion3D/world"]

[node name="block1" parent="NavigationRegion3D/world/blocks" instance=ExtResource("1_k8bqx")]
transform = Transform3D(0.652204, -0.271918, 0.707595, 0, 0.933449, 0.35871, -0.758043, -0.233952, 0.608799, -1.77109, 6.50821, 0.787333)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="NavigationRegion3D/world"]
transform = Transform3D(-1, 8.74228e-08, 3.82137e-15, 0, -4.37114e-08, 1, 8.74228e-08, 1, 4.37114e-08, -3.089, 100, 0)
light_color = Color(0.964706, 0.776471, 0.890196, 1)
shadow_enabled = true

[node name="floor" type="StaticBody3D" parent="NavigationRegion3D/world"]
transform = Transform3D(3.04, 0, 0, 0, 1.651, 0, 0, 0, 10, 0, 0, 0)
metadata/_edit_group_ = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="NavigationRegion3D/world/floor"]
mesh = SubResource("BoxMesh_uo6qh")

[node name="CollisionShape3D" type="CollisionShape3D" parent="NavigationRegion3D/world/floor"]
shape = SubResource("BoxShape3D_odway")

[node name="doorWall" parent="NavigationRegion3D/world" instance=ExtResource("5_ktfd3")]
transform = Transform3D(0.820971, 0, 0, 0, 0.565068, 0, 0, 0, 1.28408, 7.2353, 0.390994, -24.8234)

[node name="L1TOL2" parent="NavigationRegion3D/world/doorWall" instance=ExtResource("6_ivd6f")]
process_mode = 1
transform = Transform3D(3.91, 0, 0, 0, 5.257, 0, 0, 0, 1, 0, 4.02563, 0)

[node name="joe" parent="." instance=ExtResource("2_76w2n")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.635171, 1.31751, 5.1471)

[node name="stars" parent="." instance=ExtResource("3_aal3e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0241737, 1.07537, 10.1309)

[node name="bibz" parent="." instance=ExtResource("6_o177c")]
transform = Transform3D(0.999822, 0.0188833, 0, -0.0188833, 0.999822, 0, 0, 0, 1, 7.97881, 1.09832, -21.4439)

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Pause" parent="CanvasLayer" instance=ExtResource("9_t4jsp")]
visible = false

[node name="enemy" parent="." instance=ExtResource("10_bjgpl")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.1171, 0.880869, 2.1667)

[node name="enemy2" parent="." instance=ExtResource("10_bjgpl")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -11.468, 1, -19.046)

[node name="enemy3" parent="." instance=ExtResource("10_bjgpl")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14.5066, 0.41275, -11.6646)

[node name="enemy4" parent="." instance=ExtResource("10_bjgpl")]
process_mode = 1
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.58874, 0.902522, -6.93021)

[node name="enemy5" parent="." instance=ExtResource("10_bjgpl")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.40168, 0.9011, -2.34586)
